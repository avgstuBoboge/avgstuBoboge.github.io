[{"title":"cp editor在windows系统下的配置","date":"2021-02-20T17:42:21.000Z","url":"/2021/02/21/cp-editor%E5%9C%A8windows%E7%B3%BB%E7%BB%9F%E4%B8%8B%E7%9A%84%E9%85%8D%E7%BD%AE/","tags":[["哦哦哦","/tags/%E5%93%A6%E5%93%A6%E5%93%A6/"]],"categories":[["undefined",""]],"content":"本文讲什么本文主要说明CP Editor作为竞赛用IDE有哪些优势。 然后就是详细说明Windows环境下应该如何配置CP Editor。 Linux大多配置可以一行命令搞定，而且用Linux的基本都是大哥，看官方文档就能解决。(主要是我也不太熟Linux和MacOS) CP Editor是啥gitee地址 :  该仓库中有中文说明以及下载地址。 或者  官网下载 官方中文文档： CP Editor是专门为算法竞赛而生的轻量级IDE。 通过配置，它可以很方便的将题目(几乎支持所有主流OJ)的样例爬取下来并且和程序输出进行对比，支持多种评测方式(当然SPJ肯定是不行的)。 如图，通过浏览器插件以Post的形式，将Atcoder上的一道题的题目信息以及样例自动填充至IDE中。 编译运行后会自动显示评测结果，支持多种评测方式。 同时如果你配置好了CF Tools，它可以自动帮你进行提交到cf上。 同时CP Editor还具有一键输入代码模板等功能，目前的主要弱势就是不能单步调试(比较致命)以及不能代码补全。 裆燃可以也配合其它IDE使用，我们主要是要他自动化的样例对照功能。 配置第一步，C++编译器因为IDE默认可以从Path中找编译器 (如果你不知道Path是什么，请自行百度，也可以直接照下文配置)，所以我们要做的是将MinGW加入Path中。 打开你的设置 搜索”环境变量”，点击“编辑系统的环境变量”,点击”环境变量” 将 MinGW\\bin\\ 在你系统中对应的目录加入的系统变量的Path中，可以看到我是直接把DevC自带的MinGW给放了进去，相信大多数竞赛选手机子上都装有DevC。 最后就是在CP Editor中设置，直接抄作业就行 然后就可以愉快的编译运行了（ 如果不行的话有可能是Path尚未生效，对照之前步骤是否有遗漏 or 重启试试（？ clang选手的话同样把clang加入Path中，把编译命令换成clang对应的命令即可。 自带功能其实这部分大可以省略啊，因为可以看到这玩意是汉化过的，自己摸着玩就可以了（ 我圈一下几个我觉得比较使用或者有特色的功能。 代码片段 可以将一段代码保存下来并且命名，配置好之后CTRL+T可以选择你要输入的代码片段，然后输入名字后回车即可出来。 可以保存常用的模板加快打CF时的coding速度。 外观-不透明度可以设置IDE的不透明度，可能可以边看题边打代码？个人是不太习惯。 配置插件-自动爬取题目信息以及SampleChrome核浏览器： （需要科学上网，本文不教怎么科学上网） Firefox： 一键添加至浏览器扩展功能后，我们只需要在题目页面点一下competitive-companion的图标，数秒后CP Editor会自动生成一个文件并且填充好Sample。 以洛谷A+B为例，我们只需要点击一下浏览器右上角这个我们装好的插件。 然后CP Editor就会自动生成一个对应的文件并且填充好样例。（临时文件需要CTRL+S手动保存,关闭时也会提醒） 配置插件-CF Tool下载地址： 根据自己系统选择，一般是 cf_v1.0.0_windows_64.zip 自己选一个位置解压(我直接解压在CP Editor文件夹下)，然后将这个文件夹加入Path中即可使用，如果你不想配Path，也可以直接在CP Editor中设置CF Tool的绝对位置 CF Tool是一个命令行程序，用CF Tool提交需要提前输入账号信息以及提交模板，所以我们必须在命令行中提前配置好它。 运行cmd或者shell，用 cd 命令转到cf tool所在的文件夹下通过 cf config命令配置。 首先是账户配置 然后是提交模板配置，第一步是选择提交时的语言 我常用GNUC++14，输入对应的编号50 第二步是选择模板路径，这个由自己决定，D:\\template.cpp 这种都可以，需要预先创建好这个文件 下一步问你是否修改文件后缀，可以直接回车跳过。 然后输入模板的名称，比如我们这个是c++的提交模板，我们可以命名为cpp14 接下来三步是脚本行为，我们抄作业即可。 最后一步问是否设置为默认模板，按y，回车就配置好了。 之后CP Editor导入cf的题目后，IDE中会多一个提交的按钮，我们点击就可以自动提交了。 配置插件-clang format自动格式化代码这边建议是自行百度找一找clang，配置到Path中。clang包含了clang-format。 我自用的是完整的LLVM包，体积会比较大一些（200+M的安装包），但是比较方便。 LLVM下载链接：  配置到Path后就可以一键格式化你的C++代码了，不需要修改CP Editor的设置。 前面的路以后再来探索吧如果有新的好用的插件或者功能开发出来一定更（gugugu"},{"title":"Hello World","date":"2021-02-20T09:00:04.326Z","url":"/2021/02/20/hello-world/","categories":[["undefined",""]],"content":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post More info: Writing Run server More info: Server Generate static files More info: Generating Deploy to remote sites More info: Deployment"}]